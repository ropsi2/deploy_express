{"version":3,"sources":["app.js"],"names":["express","require","app","path","router","Router","bodyParser","set","join","__dirname","use","urlencoded","extended","get","req","res","render","post","body","name","password","username","title","message","listen","process","env","PORT","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AACA,IAAMC,UAAU,GAAGL,OAAO,CAAC,aAAD,CAA1B,C,CAA2C;;;AAE3CC,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAL,GAAG,CAACK,GAAJ,CAAQ,OAAR,EAAiBJ,IAAI,CAACK,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AAEAP,GAAG,CAACQ,GAAJ,CAAQJ,UAAU,CAACK,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAAoD;;AAEpDR,MAAM,CAACS,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX;AACC,CAFD;AAGAZ,MAAM,CAACS,GAAP,CAAW,QAAX,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACC,CAFD;AAIAd,GAAG,CAACe,IAAJ,CAAS,QAAT,EAAmB,UAACH,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACND,GAAG,CAACI,IADE;AAAA,MACzBC,IADyB,aACzBA,IADyB;AAAA,MACnBC,QADmB,aACnBA,QADmB;;AAGjC,MAAID,IAAI,KAAK,OAAT,IAAoBC,QAAQ,KAAK,OAArC,EAA8C;AAC9CL,IAAAA,GAAG,CAACC,MAAJ,CAAW,eAAX,EAA4B;AAC5BK,MAAAA,QAAQ,EAAEF;AADkB,KAA5B;AAGC,GAJD,MAIO;AACPJ,IAAAA,GAAG,CAACC,MAAJ,CAAW,eAAX;AACC;AACA,CAVD;AAYAZ,MAAM,CAACS,GAAP,CAAW,QAAX,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX,EAAoB;AAAEM,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAApB;AACC,CAFD;AAIArB,GAAG,CAACQ,GAAJ,CAAQ,GAAR,EAAaN,MAAb;AACAF,GAAG,CAACsB,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B,EAAqC,YAAM;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACC,CAFD","sourcesContent":["const express = require(\"express\");\r\nconst app = express();\r\nconst path = require(\"path\");\r\nconst router = express.Router();\r\nconst bodyParser = require(\"body-parser\"); // add body-parser module\r\n\r\napp.set(\"view engine\", \"pug\");\r\napp.set(\"views\", path.join(__dirname, \"views\"));\r\n\r\napp.use(bodyParser.urlencoded({ extended: true })); // use body-parser\r\n\r\nrouter.get(\"/\", (req, res) => {\r\nres.render(\"home\");\r\n});\r\nrouter.get(\"/login\", (req, res) => {\r\nres.render(\"login\");\r\n});\r\n\r\napp.post(\"/login\", (req, res) => {\r\nconst { name, password } = req.body;\r\n\r\nif (name === \"admin\" && password === \"admin\") {\r\nres.render(\"login_success\", {\r\nusername: name,\r\n});\r\n} else {\r\nres.render(\"login_failure\");\r\n}\r\n});\r\n\r\nrouter.get(\"/about\", (req, res) => {\r\nres.render(\"about\", { title: \"Hey\", message: \"The file is getting rendered\" });\r\n});\r\n\r\napp.use(\"/\", router);\r\napp.listen(process.env.PORT || 8000, () => {\r\nconsole.log(\"Running at Port 8000\");\r\n});"],"file":"app.dev.js"}